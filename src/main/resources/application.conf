include "cluster"
include "local-shared"
include "persistence-postgre"

my-app {
  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
  fulfilment-provider {
    shipping-delay = 10s
  }
}

akka.actor {
  serialization-bindings {
    "com.btrajkovski.serializers.JsonSerializable" = jackson-json
  }
}

akka.remote.artery.canonical.port = 2551
akka.management.http.port = 9101

akka {

  # Logger config for Akka internals and classic actors, the new API relies
  # directly on SLF4J and your config for the logger backend.

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

   # Log level for the very basic logger activated during ActorSystem startup.
   # This logger prints the log messages to stdout (System.out).
   # Options: OFF, ERROR, WARNING, INFO, DEBUG
   stdout-loglevel = "INFO"

   # Filter of log events that is used by the LoggingAdapter before
   # publishing log events to the eventStream.
   logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}